{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "AlexaPreprocessSchema",
  "description": "Structured output from an NLP pre-processor. Always includes SSML response and reason, and optionally includes a 'data' payload for actions like image generation.",
  "type": "object",
  "properties": {
    "status": {
      "type": "string",
      "enum": ["response_only", "specific_action", "failure"],
      "description": "'response_only': return SSML only. 'specific_action': perform an action. 'failure': nothing understood."
    },
    "reason": {
      "type": "string",
      "description": "Explanation or justification â€” always required"
    },
    "response_ssml": {
      "type": "string",
      "description": "SSML Alexa will return to the user"
    },
    "nlp_confidence": {
      "type": "number",
      "minimum": 0.0,
      "maximum": 1.0,
      "description": "Confidence score in parsing and inference"
    },
    "data": {
      "type": "object",
      "description": "Only present when status is 'specific_action'. Contains parsed generation parameters or other actions.",
      "properties": {
        "type": {
          "type": "string",
          "enum": ["image_generation", "other_action"],
          "description": "Type of action to take based on NLP output"
        },
        "payload": {
          "type": "object",
          "description": "Parameters for the specified action",
          "oneOf": [
            {
              "title": "Image Generation Payload",
              "type": "object",
              "properties": {
                "full_prompt": {
                  "type": "string",
                  "description": "Combined subject and style text suitable for image generation"
                },
                "workflow": {
                  "type": "string",
                  "enum": ["flux1-dev-scale-l.json", "sdxl-scale.json"],
                  "description": "Image generation workflow to use"
                },
                "publish_target": {
                  "type": "array",
                  "description": "List of screens where the image should be shown",
                  "items": {
                    "type": "string",
                    "enum": ["PC screen", "Kitchen screen", "North screen", "South screen"]
                  },
                  "uniqueItems": true
                },
                "num_images": {
                  "type": "integer",
                  "minimum": 1,
                  "description": "Usually set to match publish_target.length"
                }
              },
              "required": ["full_prompt"],
              "additionalProperties": false
            },
            {
              "title": "Other Action Payload",
              "type": "object",
              "properties": {
                "action": {
                  "type": "string",
                  "description": "A symbolic name or command representing another type of backend action"
                },
                "parameters": {
                  "type": "object",
                  "description": "Parameters for the custom action",
                  "additionalProperties": true
                }
              },
              "required": ["action"]
            }
          ]
        }
      },
      "required": ["type", "payload"],
      "additionalProperties": false
    }
  },
  "required": ["status", "reason", "response_ssml", "nlp_confidence"],
  "allOf": [
    {
      "if": { "properties": { "status": { "const": "failure" } } },
      "then": {
        "not": { "required": ["data"] }
      }
    },
    {
      "if": { "properties": { "status": { "const": "specific_action" } } },
      "then": {
        "required": ["data"]
      }
    },
    {
      "if": { "properties": { "status": { "const": "response_only" } } },
      "then": {
        "not": { "required": ["data"] }
      }
    }
  ],
  "additionalProperties": false
}
