{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Schedule Configuration",
  "description": "Configure automated triggers and instructions for this schedule.",
  "type": "object",
  "properties": {
    "instructions": {
      "$ref": "#/definitions/instruction_array",
      "title": "Instructions",
      "description": "A list of instructions to execute when triggered."
    },
    "triggers": {
      "type": "array",
      "title": "Triggers",
      "description": "Conditions that cause instructions to run.",
      "items": {
        "type": "object",
        "title": "Trigger",
        "description": "A single trigger condition.",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["time", "day_of_week", "day_of_year", "event"],
            "title": "Trigger Type",
            "description": "The type of trigger (time, day of week, etc.)."
          },
          "value": {
            "type": "string",
            "title": "Trigger Value",
            "description": "The value for the trigger (e.g., time or event name)."
          },
          "repeat": {
            "type": "integer",
            "minimum": 1,
            "title": "Repeat",
            "description": "How frequently to repeat this trigger (every x minutes)."
          },
          "window": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^[0-9]{2}:[0-9]{2}$"
            },
            "minItems": 2,
            "maxItems": 2,
            "title": "Window",
            "description": "Time window for the trigger (start and end)."
          },
          "important": {
            "type": "boolean",
            "title": "Important",
            "description": "Mark this trigger as important (queues in case of running instructions)."
          },
          "urgent": {
            "type": "boolean",
            "title": "Urgent",
            "description": "Mark this trigger as urgent (will run despite other instructions)."
          },
          "instructions": {
            "$ref": "#/definitions/instruction_array",
            "title": "Nested Instructions",
            "description": "Instructions to execute for this trigger."
          }
        },
        "required": ["type", "value"],
        "allOf": [
          {
            "if": {
              "properties": {
                "type": { "const": "time" }
              }
            },
            "then": {
              "properties": {
                "value": {
                  "type": "string",
                  "pattern": "^[0-9]{2}:[0-9]{2}$"
                }
              }
            }
          },
          {
            "if": {
              "properties": {
                "type": { "const": "day_of_week" }
              }
            },
            "then": {
              "properties": {
                "value": {
                  "type": "string",
                  "enum": ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"]
                }
              }
            }
          },
          {
            "if": {
              "properties": {
                "type": { "const": "day_of_year" }
              }
            },
            "then": {
              "properties": {
                "value": {
                  "type": "string",
                  "pattern": "^[0-9]{1,2}-[A-Z][a-z]{2}$"
                }
              }
            }
          },
          {
            "if": {
              "properties": {
                "type": { "const": "event" }
              }
            },
            "then": {
              "properties": {
                "value": {
                  "type": "string",
                  "enum": ["user-started-generation"]
                }
              }
            }
          }
        ]
      }
    }
  },
  "definitions": {
    "instruction_array": {
      "type": "array",
      "title": "Instruction Array",
      "description": "An array of instruction objects.",
      "items": {
        "$ref": "#/definitions/instruction"
      }
    },
    "instruction": {
      "title": "Instruction",
      "description": "A single instruction step.",
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "action": { "const": "generate" },
            "prompt_var": { "type": "string", "title": "Prompt Variable", "description": "Variable for the prompt, if applicable." },
            "theme": { "type": "string", "title": "Theme", "description": "Theme to use for this instruction." },
            "theme_var": { "type": "string", "title": "Theme Variable", "description": "Variable for the theme, if applicable." },
            "refiner": { "type": "string", "enum": ["refinerA", "refinerB", "refinerC"], "title": "Refiner", "description": "Refiner to use for generation." },
            "workflow": { "type": "string", "enum": ["workflow1", "workflow2"], "title": "Workflow", "description": "Workflow to use for generation." },
            "history": { "type": "string", "title": "History", "description": "History context for this instruction." },
            "value": { "oneOf": [ { "type": "string", "title": "String Value" }, { "type": "number", "title": "Numeric Value" }, { "type": "array", "title": "Array Value", "items": { "type": "string" } }, { "type": "boolean", "title": "Boolean Value" } ], "default": "" }
          },
          "required": ["action"]
        },
        {
          "type": "object",
          "properties": {
            "action": { "enum": ["devise_prompt", "display"] },
            "prompt_var": { "type": "string", "title": "Prompt Variable", "description": "Variable for the prompt, if applicable." },
            "theme": { "type": "string", "title": "Theme", "description": "Theme to use for this instruction." },
            "theme_var": { "type": "string", "title": "Theme Variable", "description": "Variable for the theme, if applicable." },
            "history": { "type": "string", "title": "History", "description": "History context for this instruction." },
            "mode": { "type": "string", "enum": ["next", "random"], "title": "Mode", "description": "Mode for this instruction (next/random)." },
            "duration": { "type": "integer", "minimum": 1, "title": "Duration", "description": "Duration in seconds." },
            "choices": { "type": "array", "items": { "type": "string" }, "minItems": 1, "title": "Choices", "description": "Choices for random_choice action." },
            "value": { "oneOf": [ { "type": "string", "title": "String Value" }, { "type": "number", "title": "Numeric Value" }, { "type": "array", "title": "Array Value", "items": { "type": "string" } }, { "type": "boolean", "title": "Boolean Value" } ], "default": "" }
          },
          "required": ["action"]
        },
        { 
          "type": "object",
          "properties": {
            "action": { "enum": ["device-media-sync", "device-wake", "device-sleep"] }
          },
          "required": ["action"]
        },
        { 
          "type": "object",
          "properties": {
            "action": { "enum": ["sleep", "wait"] },
            "value": { "type": "integer" }
          },
          "required": ["action"]
        },
        { 
          "type": "object",
          "properties": {
            "action": { "const": "set_var" },
            "var": { "type": "string", "title": "Variable", "description": "Variable name for set_var action." },
            "value": { "oneOf": [ { "type": "string", "title": "String Value" }, { "type": "number", "title": "Numeric Value" }, { "type": "array", "title": "Array Value", "items": { "type": "string" } }, { "type": "boolean", "title": "Boolean Value" } ], "default": "" }
          },
          "required": ["action", "var", "value"]
        },
        { 
          "type": "object",
          "properties": {
            "action": { "const": "display" }
          },
          "required": ["action"]
        },
        {
          "type": "object",
          "properties": {
            "action": { 
              "enum": [
                "random_choice", "animate"
              ] 
            },
            "prompt_var": { "type": "string", "title": "Prompt Variable", "description": "Variable for the prompt, if applicable." },
            "theme": { "type": "string", "title": "Theme", "description": "Theme to use for this instruction." },
            "theme_var": { "type": "string", "title": "Theme Variable", "description": "Variable for the theme, if applicable." },
            "mode": { "type": "string", "enum": ["next", "random"], "title": "Mode", "description": "Mode for this instruction (next/random)." },
            "duration": { "type": "integer", "minimum": 1, "title": "Duration", "description": "Duration in seconds." },
            "choices": { "type": "array", "items": { "type": "string" }, "minItems": 1, "title": "Choices", "description": "Choices for random_choice action." },
            "var": { "type": "string", "title": "Variable", "description": "Variable name for set_var action." },
            "value": { "oneOf": [ { "type": "string", "title": "String Value" }, { "type": "number", "title": "Numeric Value" }, { "type": "array", "title": "Array Value", "items": { "type": "string" } }, { "type": "boolean", "title": "Boolean Value" } ], "default": "" }
          },
          "required": ["action"],
          "allOf": [
            {
              "if": { "properties": { "action": { "const": "set_var" } }, "required": ["action"] },
              "then": { "required": ["var", "value"] }
            }
          ]
        }
      ]
    }
  },
  "additionalProperties": false
}