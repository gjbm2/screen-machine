{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "properties": {
    "instructions": {
      "$ref": "#/definitions/instruction_array"
    },
    "triggers": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["time", "day_of_week", "day_of_year", "event"]
          },
          "value": {
            "oneOf": [
              {
                "type": "string",
                "pattern": "^[0-9]{2}:[0-9]{2}$"
              },
              {
                "type": "string",
                "enum": ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"]
              },
              {
                "type": "string",
                "pattern": "^[0-9]{1,2}-[A-Z][a-z]{2}$"
              },
              {
                "type": "string",
                "enum": ["user-started-generation"]
              }
            ]
          },
          "repeat": {
            "type": "integer",
            "minimum": 1
          },
          "window": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^[0-9]{2}:[0-9]{2}$"
            },
            "minItems": 2,
            "maxItems": 2
          },
          "important": {
            "type": "boolean"
          },
          "urgent": {
            "type": "boolean"
          },
          "instructions": {
            "$ref": "#/definitions/instruction_array"
          }
        },
        "required": ["type", "value"],
        "allOf": [
          {
            "if": {
              "properties": { "type": { "const": "time" } },
              "required": ["type"]
            },
            "then": {
              "properties": {
                "value": { "pattern": "^[0-9]{2}:[0-9]{2}$" }
              }
            }
          },
          {
            "if": {
              "properties": { "type": { "const": "day_of_week" } },
              "required": ["type"]
            },
            "then": {
              "properties": {
                "value": { "enum": ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"] }
              }
            }
          },
          {
            "if": {
              "properties": { "type": { "const": "day_of_year" } },
              "required": ["type"]
            },
            "then": {
              "properties": {
                "value": { "pattern": "^[0-9]{1,2}-[A-Z][a-z]{2}$" }
              }
            }
          },
          {
            "if": {
              "properties": { "type": { "const": "event" } },
              "required": ["type"]
            },
            "then": {
              "properties": {
                "value": { "enum": ["user-started-generation"] }
              }
            }
          }
        ]
      }
    }
  },
  "definitions": {
    "instruction_array": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/instruction"
      }
    },
    "instruction": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "enum": [
            "generate",
            "display",
            "devise_prompt",
            "sleep",
            "wait",
            "clear_history",
            "random_choice",
            "animate",
            "device-media-sync",
            "device-wake",
            "device-sleep"
          ]
        },
        "prompt_var": {
          "type": "string"
        },
        "theme": {
          "type": "string"
        },
        "theme_var": {
          "type": "string"
        },
        "var": {
          "type": "string"
        },
        "history": {
          "type": "string"
        },
        "mode": {
          "type": "string",
          "enum": [
            "next",
            "random"
          ]
        },
        "duration": {
          "type": "integer",
          "minimum": 1
        },
        "choices": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1
        }
      },
      "required": [
        "action"
      ],
      "allOf": [
        {
          "if": {
            "properties": { "action": { "const": "clear_history" } },
            "required": ["action"]
          },
          "then": {
            "required": ["var"]
          }
        }
      ]
    }
  },
  "additionalProperties": false
}